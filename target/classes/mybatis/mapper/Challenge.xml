<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.healthplan.work.dao.ChallengeMapper">

    <!-- 검색 조건 -->
    <sql id="search">
        <if test="searchType != null and searchType != ''">
            <if test="searchType == 'total'">
                AND (
                TITLE LIKE '%' || #{keyword} || '%'
                OR bcontents LIKE '%' || #{keyword} || '%'
                )
            </if>
            <if test="searchType != 'total'">
                AND ${searchType} LIKE '%' || #{keyword} || '%'
            </if>
        </if>
    </sql>


    <!-- 챌린지 목록 조회 -->
    <select id="selectChallengeList" parameterType="com.healthplan.work.vo.SearchCriteria" resultType="com.healthplan.work.vo.ChallengeEntity">
         SELECT *
            FROM (
                 SELECT 
                 ROWNUM AS RNUM,
                 data.*
                 FROM (
                    SELECT 
                    b.bno,
                    b.mno,
                    b.title,
                    b.bcontents,
                    TO_CHAR(b.wdate, 'YYYY-MM-DD HH24:MI:SS') AS wdate,
                    b.bcounts,
                    b.replycnt,
                    m.uuid
                    FROM BOARD b
                    LEFT JOIN MEMBER m ON b.mno = m.mno
                    WHERE 1=1
                    <include refid="search"></include>
                    ORDER BY b.wdate DESC
                    ) data
                ) 
            ORDER BY RNUM
    </select>

    <!-- 챌린지 총 개수 조회 -->
    <select id="selectChallengeCount" parameterType="com.healthplan.work.vo.SearchCriteria" resultType="int">
        SELECT COUNT(*)
        FROM BOARD b
        WHERE 1=1
        <include refid="search"/>
    </select>

    <!-- 챌린지 상세 조회 -->
    <select id="selectChallengeRead" parameterType="int" resultType="com.healthplan.work.vo.ChallengeEntity">
        SELECT
        b.bno,
        b.mno,
        b.title,
        b.bcontents,
        TO_CHAR(b.wdate, 'YYYY-MM-DD') AS wdate,
        b.bcounts
        FROM BOARD b
        WHERE b.bno = #{bno}
    </select>

    <!-- 챌린지 등록 -->
    <insert id="insertChallenge">
        INSERT INTO BOARD (
            BNO,
            MNO,
            title,
            bcontents,
            wdate,
            bcounts,
            replycnt
            ) VALUES (
            BOARD_SEQ.NEXTVAL,
            #{mno},
            #{title},
            #{bcontents},
            CURRENT_TIMESTAMP AT TIME ZONE 'Asia/Seoul',
            0,
            0
        )

        <selectKey keyProperty="bno" resultType="int" order="AFTER">
            SELECT BOARD_SEQ.CURRVAL FROM DUAL
        </selectKey>
    </insert>

    <!-- 챌린지 수정 -->
    <update id="updateChallenge" parameterType="com.healthplan.work.vo.ChallengeEntity">
        UPDATE BOARD
        SET
        title = #{title},
        bcontents = #{bcontents}
        WHERE bno = #{bno}
    </update>

    <!-- 챌린지 삭제 -->
    <delete id="deleteChallenge" parameterType="int">
        DELETE FROM BOARD WHERE bno = #{bno}
    </delete>

    <!-- 조회수 증가 -->
    <update id="updateChallengeCount">
        UPDATE BOARD
        SET BCOUNTS = BCOUNTS + 1
        WHERE BNO = #{bno}
    </update>

	<!-- 첨부파일 insert 1 -->
	<insert id="challengeAttach" parameterType="java.util.HashMap">

		<foreach collection="listMap" item="item" open="INSERT ALL" close="SELECT * FROM DUAL" separator=" ">

			INTO NATTACH(
				  ANO
				, BNO
				, FILENAME
				, IMGTYPE
				, REGDATE
			) VALUES(
				  ANO_SEQ.NEXTVAL
				, #{item.bno}
				, #{item.fileName}
				, 'A'
				, CURRENT_TIMESTAMP AT TIME ZONE 'Asia/Seoul'
			)
		</foreach>

	</insert>

	<!-- 첨부파일 insert 2 -->
        <!-- #{imgType} A로 변경 -->
        <!-- BOARD_SEQ.CURRVAL 밸류값을 #{bno}로 변경 -->
    <insert id="addAttach" parameterType="java.lang.String">
    INSERT INTO NATTACH (
        IMGNAME,
        IMAGEURL,
        UUID,
        PATH,
        IMGTYPE,
        BNO,
        ANO,
        REGDATE
    )
    VALUES (
        #{imgName},
        #{imgURL},
        #{uuid},
        #{path},
        #{imgType},
        BOARD_SEQ.CURRVAL,
        ANO_SEQ.NEXTVAL,
        CURRENT_TIMESTAMP AT TIME ZONE 'Asia/Seoul'
    )
</insert>


	<!-- 첨부파일 update -->
	<insert id="updateAttach" parameterType="java.lang.String">
		INSERT INTO NATTACH (
			  IMGNAME
			, IMAGEURL
			, UUID
			, PATH
			, IMGTYPE
			, BNO
			, REGDATE
		)
		VALUES (
			  #{imgName}
			, #{imgURL}
			, #{uuid}
			, #{path}
			, #{imgType}
			, #{bno}
			, CURRENT_TIMESTAMP AT TIME ZONE 'Asia/Seoul'
		)
	</insert>


	<!-- 첨부파일 select -->
	<select id="selectImageList" resultType="com.healthplan.work.vo.ImageDTO">

		SELECT
			  BNO
			, IMGNAME
			, IMAGEURL
			, UUID
			, PATH
			, IMGTYPE
		FROM  NATTACH
		WHERE 1=1
		  AND BNO = #{bno}
		  AND IMGTYPE = 'A'
		ORDER BY REGDATE

	</select>
		<select id="selectMainImage" resultType="com.healthplan.work.vo.ImageDTO">

		SELECT
			  BNO
			, IMGNAME
			, IMAGEURL
			, UUID
			, PATH
			, IMGTYPE
		FROM  NATTACH
		WHERE 1=1
		  AND BNO = #{bno}
		  AND IMGTYPE = 'M'

	</select>



	<!-- 첨부파일 삭제 -->
	<delete id="deleteAttach">

		DELETE FROM NATTACH WHERE BNO = #{bno}

	</delete>

    <!-- 포인트 적립 -->
    <update id="addPoint" >
        UPDATE POINT 
        SET 
        PCOUNT = PCOUNT + #{pcount}
        , PSOURCE = #{psource}
        , PDATE = CURRENT_TIMESTAMP AT TIME ZONE 'Asia/Seoul'
        WHERE MNO = #{mno}
    </update>

    <!-- 챌린지 랭킹 -->
    <select id="cRank" resultType="map">
        <![CDATA[
            SELECT *
            FROM
                (
                SELECT 
                m.mno AS mno, 
                m.uuid AS uuid, 
                m.name AS name, 
                COUNT(r.bno) AS commentCount
                FROM 
                MEMBER m
                JOIN 
                BREPLY r ON m.mno = r.mno
                GROUP BY 
                m.mno, m.uuid, m.name
                ORDER BY 
                commentCount DESC
                )
            WHERE ROWNUM <= 3
        ]]>
    </select>

    <!-- 댓글수 더하기 -->
	<update id="updateReplyCnt2">
		UPDATE BOARD
		SET
		REPLYCNT = 
        (SELECT COUNT(*)
		FROM BREPLY
		WHERE BNO = #{bno})
		WHERE BNO = #{bno}
	</update>
    
</mapper>